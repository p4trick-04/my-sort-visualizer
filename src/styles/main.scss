
@use "reset";
@include reset.reset-default-values();

$bg-color-hover-gray: #64646454;

// @mixin all-zero-pos($top,$right,$bottom,$left:rue)

:root{
  font-size: 16px;
}

* {
  box-sizing: border-box;
}

body{
  font-family: Arial, Helvetica, sans-serif;
  background-color: #f6f6f6b2;
}

.container{
  position: relative;
}

.spin{
  animation-name: spin;
  animation-duration: 5000ms;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.no-margin{
  margin: 0;
}

header{
  box-shadow: 1px -1px 6px black;
  background-color: #E7F9FF;
  padding: 1rem 2.5rem;

  display: flex;
  justify-content: space-around;

  .left-wrap{
    display: flex;
    column-gap: 2.5rem;
    .start-btn{
      border: 0;
      &:hover{
        transition-duration: 500ms;
        background-color: black;
        color: whitesmoke;
      }
      background-color: #00FFB2;
      border-radius: 50%;
      width: 6rem;
      height: 6rem;
      font-size: 1.75rem;
    }

    .new-array{
      &:hover{

      }
    }

    .main-setting{
      display: flex;
      flex-direction: column;
      margin-bottom: 1rem;
    }

    .label-wrap{
      display: flex;
      justify-content: space-between;
      flex-direction: column;
    }

    .start-btn,
    .new-array,
    .more-setting,
    input[type="range"],
    .size-input:hover{
      cursor: pointer;
    }

    .size-input{
      // background-color: transparent;
      // if the size-input clicked
      &:focus{
        background-color: white;
        cursor: text;
      }
    }

    .more-setting{
      width: max-content;

      &:hover{
        animation-name: spin;
        animation-duration: 5000ms;
        animation-timing-function: linear;
        animation-iteration-count: infinite;
      }
    }

  }
  
  .algo-wrap{
    display: flex;
    align-items: center;
    .algo-menu{
      position: relative;
      display: flex;
      column-gap: 1rem;
      font-size: 1.25rem;
      li{
        &:hover{
          cursor: pointer;
        }
        &:active{
          transform: scale(0.9);
          transition-duration: 50ms;
        }
      }
      .algo-menu-line{
        background-color: black;
        display: none;
        height: 2px;
      
        transition: all 750ms ease-out;

        position: absolute;
        bottom: 0;
        right: 0;
        left: 0;
      }
    }
  }
}


.setting-display{
  position: absolute;
  top:0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.1);

  display: flex;
  justify-content: center;
  align-items: center;
  display: none;
  
  .setting-contents{
    position: absolute;
    z-index: 99;
    background-color: #fff;
    box-shadow: 0px 0px 15px black;
    $w: 1.5rem;
    $h: 1.5rem;
    .exit-btn{
      &:hover{
        cursor: pointer;
        background-color: $bg-color-hover-gray;
      }
      border: 0;
      background-color: rgb(238, 238, 238);
      border-radius: 50%;
      padding: 1rem;
      font-size: 2rem;

      position: absolute;
      right: 0;
    }
    
    .title{
      margin: 1rem 0;
      text-align: center;
      font-size: 2rem;

    }
    & > div{
      display: flex;
      margin: 1rem 3rem;
    }
    & input{
      &:hover{
        background-color: rgba(128, 128, 128, 0.795);
        cursor: pointer;
      }
      margin-right: 1rem;
      width: $w;
      height: $h;
      border-radius: 50%;
    }
    & p{
      font-weight: 600;
      font-size: $w;
    }
  }
}

.bar-container-1{
  margin: 2rem 0;
  // the plan is there will be a "pseudo code" at the left bar
  // so setting the bar-container padding to 20starem is the right choice
  padding: 0 2rem;
  display: flex;
  column-gap: 1px;
  justify-content: center;

  // uncomment this if I want the bar stick at the bottom together
  // align-items: flex-end;
  & > div{
    // border-radius: 2px;
    border-bottom-left-radius: 2px;
    border-bottom-right-radius: 2px;
    // border-top-left-radius: ;
    // border-top-right-radius: ;
    background-color: #F65050;
    width: 25%;
  }
}


@keyframes spin {
  from {
    transform:rotate(0deg);
  }
  to {
    transform:rotate(360deg);
  }

}